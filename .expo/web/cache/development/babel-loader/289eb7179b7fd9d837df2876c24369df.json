{"ast":null,"code":"import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport CalendarScreen from \"./screens/CalendarScreen\";\nimport ProgresoScreen from \"./screens/ProgresoScreen\";\nimport PreguntasScreen from \"./screens/PreguntasScreen\";\nimport TestScreen from \"./screens/TestScreen\";\nvar homeName = \"Home\";\nvar progresoName = \"Progreso\";\nvar calendarName = \"Calendar\";\nvar preguntasName = 'Preguntas';\nvar testName = 'Test';\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nfunction Home() {\n  return React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, {\n    options: {\n      headerTintColor: '#fff',\n      headerStyle: {\n        backgroundColor: '#0278BD'\n      }\n    },\n    name: homeName,\n    component: HomeScreen\n  }), React.createElement(Stack.Screen, {\n    options: {\n      headerTintColor: '#fff',\n      headerStyle: {\n        backgroundColor: '#0278BD'\n      }\n    },\n    name: preguntasName,\n    component: PreguntasScreen\n  }), React.createElement(Stack.Screen, {\n    options: {\n      headerTintColor: '#fff',\n      headerStyle: {\n        backgroundColor: '#0278BD'\n      }\n    },\n    name: testName,\n    component: TestScreen\n  }));\n}\n\nfunction MainContainer() {\n  return React.createElement(NavigationContainer, null, React.createElement(Tab.Navigator, {\n    initialRouteName: homeName,\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n          var rn = route.name;\n\n          if (rn === homeName) {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (rn === progresoName) {\n            iconName = focused ? 'bar-chart' : 'bar-chart-outline';\n          } else if (rn === calendarName) {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'white',\n      inactiveTintColor: '#E5E5E5',\n      labelStyle: {\n        paddingBottom: 10,\n        fontSize: 10\n      },\n      activeBackgroundColor: '#0278BD',\n      inactiveBackgroundColor: '#0278BD'\n    }\n  }, React.createElement(Tab.Screen, {\n    options: {\n      headerTintColor: '#fff',\n      headerStyle: {\n        backgroundColor: '#0278BD'\n      }\n    },\n    name: progresoName,\n    component: ProgresoScreen\n  }), React.createElement(Tab.Screen, {\n    options: {\n      headerShown: false,\n      headerTintColor: '#fff',\n      headerStyle: {\n        backgroundColor: '#0278BD'\n      }\n    },\n    name: homeName,\n    component: Home\n  }), React.createElement(Tab.Screen, {\n    options: {\n      headerTintColor: '#fff',\n      headerStyle: {\n        backgroundColor: '#0278BD'\n      }\n    },\n    name: calendarName,\n    component: CalendarScreen\n  })), React.createElement(StatusBar, {\n    backgroundColor: \"#004C8C\",\n    style: \"light\"\n  }));\n}\n\nexport default MainContainer;","map":{"version":3,"sources":["D:/Expo/FlashCards/navigation/MainContainer.js"],"names":["React","NavigationContainer","createBottomTabNavigator","createStackNavigator","Ionicons","HomeScreen","CalendarScreen","ProgresoScreen","PreguntasScreen","TestScreen","homeName","progresoName","calendarName","preguntasName","testName","Stack","Tab","Home","headerTintColor","headerStyle","backgroundColor","MainContainer","route","tabBarIcon","focused","color","size","iconName","rn","name","activeTintColor","inactiveTintColor","labelStyle","paddingBottom","fontSize","activeBackgroundColor","inactiveBackgroundColor","headerShown"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { StatusBar } from 'react-native';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\n\r\n// Screens\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport CalendarScreen from './screens/CalendarScreen';\r\nimport ProgresoScreen from './screens/ProgresoScreen';\r\nimport PreguntasScreen from './screens/PreguntasScreen';\r\nimport TestScreen from './screens/TestScreen';\r\n\r\n\r\n\r\n//Screen names\r\nconst homeName = \"Home\";\r\nconst progresoName = \"Progreso\";\r\nconst calendarName = \"Calendar\";\r\nconst preguntasName = 'Preguntas';\r\nconst testName = 'Test';\r\n\r\n\r\n/*  <Stack.Navigator>\r\n            <Stack.Screen name={preguntasName} component={PreguntasScreen} />\r\n        </Stack.Navigator>*/\r\n\r\nconst Stack = createStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction Home(){\r\n  return(\r\n    <Stack.Navigator>\r\n            <Stack.Screen options={{\r\n                  headerTintColor: '#fff',                \r\n                  headerStyle:{\r\n                    backgroundColor: '#0278BD'\r\n                  }\r\n                }}  name={homeName} \r\n                component={HomeScreen}/>\r\n            <Stack.Screen options={{\r\n                  headerTintColor: '#fff',                \r\n                  headerStyle:{\r\n                    backgroundColor: '#0278BD'\r\n                  }\r\n                }}  \r\n                name={preguntasName} \r\n                component={PreguntasScreen} />\r\n             <Stack.Screen options={{\r\n                  headerTintColor: '#fff',                \r\n                  headerStyle:{\r\n                    backgroundColor: '#0278BD'\r\n                  }\r\n                }}  \r\n                name={testName} \r\n                component={TestScreen} />    \r\n  \r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction MainContainer() {\r\n  return (\r\n    <NavigationContainer>\r\n      \r\n\r\n      <Tab.Navigator\r\n        initialRouteName={homeName}\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n            let rn = route.name;\r\n\r\n            if (rn === homeName) {\r\n              iconName = focused ? 'home' : 'home-outline';\r\n\r\n            } else if (rn === progresoName) {\r\n              iconName = focused ? 'bar-chart' : 'bar-chart-outline';\r\n\r\n            } else if (rn === calendarName) {\r\n              iconName = focused ? 'calendar' : 'calendar-outline';\r\n            }\r\n\r\n            // You can return any component that you like here!\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n        })}\r\n        tabBarOptions={{\r\n          activeTintColor: 'white',\r\n          inactiveTintColor: '#E5E5E5',\r\n          labelStyle: { paddingBottom: 10, fontSize: 10 },\r\n          activeBackgroundColor: '#0278BD',\r\n          inactiveBackgroundColor: '#0278BD',\r\n          \r\n        }}>\r\n\r\n        <Tab.Screen options={{\r\n                  headerTintColor: '#fff',                \r\n                  headerStyle:{\r\n                    backgroundColor: '#0278BD'\r\n                  }\r\n                }} \r\n                name={progresoName} \r\n                component={ProgresoScreen} />\r\n        <Tab.Screen  options={{\r\n                  headerShown: false,\r\n                  headerTintColor: '#fff',                \r\n                  headerStyle:{\r\n                    backgroundColor: '#0278BD'\r\n                  }\r\n                }} \r\n                name={homeName}\r\n                component={Home} >\r\n                    \r\n\r\n                </Tab.Screen>\r\n        <Tab.Screen  options={{\r\n                  headerTintColor: '#fff',                \r\n                  headerStyle:{\r\n                    backgroundColor: '#0278BD'\r\n                  }\r\n                }} \r\n                name={calendarName}\r\n                component={CalendarScreen} />\r\n      \r\n       \r\n\r\n      </Tab.Navigator>\r\n      \r\n      <StatusBar backgroundColor=\"#004C8C\" style=\"light\"/>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default MainContainer;"]},"metadata":{},"sourceType":"module"}