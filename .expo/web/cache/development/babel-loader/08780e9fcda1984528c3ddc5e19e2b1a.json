{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nexport default function CalendarScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState('date'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mode = _useState4[0],\n      setMode = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      show = _useState6[0],\n      setShow = _useState6[1];\n\n  var _useState7 = useState('Empty'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      text = _useState8[0],\n      setText = _useState8[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(Platform.OS === 'ios');\n    setDate(currentDate);\n    var tempDate = new Date(currentDate);\n    var fDate = tempDate.getDate() + '/' + (tempDate.getMonth() + 1) + '/' + tempDate.getFullYear();\n    setText(fDate);\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode('date');\n  };\n\n  var showTimepicker = function showTimepicker() {\n    showMode('time');\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: 'bold',\n      fontSize: 20\n    }\n  }, text, \" \"), React.createElement(View, {\n    style: {\n      margin: 20\n    }\n  }, React.createElement(Button, {\n    onPress: showDatepicker,\n    title: \"Mostrar Calendario\"\n  })), show && React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: date,\n    mode: mode,\n    is24Hour: true,\n    display: \"default\",\n    onChange: onChange\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["D:/Expo/FlashCards/navigation/screens/CalendarScreen.js"],"names":["React","useState","DateTimePicker","CalendarScreen","navigation","Date","date","setDate","mode","setMode","show","setShow","text","setText","onChange","event","selectedDate","currentDate","Platform","OS","tempDate","fDate","getDate","getMonth","getFullYear","showMode","currentMode","showDatepicker","showTimepicker","styles","container","fontWeight","fontSize","margin","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;AAEA,OAAOC,cAAP,MAA2B,wCAA3B;AAEA,eAAe,SAASC,cAAT,OAAwC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAGnD,kBAAwBH,QAAQ,CAAC,IAAII,IAAJ,EAAD,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwBN,QAAQ,CAAC,MAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwBR,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAOS,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwBV,QAAQ,CAAC,OAAD,CAAhC;AAAA;AAAA,MAAOW,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,YAAR,EAAyB;AACxC,QAAMC,WAAW,GAAGD,YAAY,IAAIV,IAApC;AACAK,IAAAA,OAAO,CAACO,QAAQ,CAACC,EAAT,KAAgB,KAAjB,CAAP;AACAZ,IAAAA,OAAO,CAACU,WAAD,CAAP;AAEA,QAAIG,QAAQ,GAAG,IAAIf,IAAJ,CAASY,WAAT,CAAf;AACA,QAAII,KAAK,GAAGD,QAAQ,CAACE,OAAT,KAAqB,GAArB,IAA4BF,QAAQ,CAACG,QAAT,KAAsB,CAAlD,IAAuD,GAAvD,GAA6DH,QAAQ,CAACI,WAAT,EAAzE;AACAX,IAAAA,OAAO,CAACQ,KAAD,CAAP;AAGD,GAVD;;AAYA,MAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACC,WAAD,EAAiB;AAChCf,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAF,IAAAA,OAAO,CAACiB,WAAD,CAAP;AACD,GAHD;;AAKA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BF,IAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,GAFD;;AAIA,MAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzBH,IAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,GAFH;;AAMA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAC,MAAZ;AAAoBC,MAAAA,QAAQ,EAAC;AAA7B;AAAb,KAAiDpB,IAAjD,MADJ,EAEA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACqB,MAAAA,MAAM,EAAC;AAAR;AAAb,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN,cAAjB;AAAiC,IAAA,KAAK,EAAC;AAAvC,IADF,CAFA,EAMCjB,IAAI,IACH,oBAAC,cAAD;AACE,IAAA,MAAM,EAAC,gBADT;AAEE,IAAA,KAAK,EAAEJ,IAFT;AAGE,IAAA,IAAI,EAAEE,IAHR;AAIE,IAAA,QAAQ,EAAE,IAJZ;AAKE,IAAA,OAAO,EAAC,SALV;AAME,IAAA,QAAQ,EAAEM;AANZ,IAPF,CADJ;AAmBH;AAED,IAAMe,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAE7BL,EAAAA,SAAS,EAAE;AACPM,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE;AAHT;AAFkB,CAAlB,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport { View, Text, Button, StyleSheet, Platform } from 'react-native';\r\nimport DateTimePicker from '@react-native-community/datetimepicker'\r\n\r\nexport default function CalendarScreen({ navigation }) {\r\n\r\n\r\n    const [date, setDate] = useState(new Date());\r\n    const [mode, setMode] = useState('date');\r\n    const [show, setShow] = useState(false);\r\n    const [text, setText] = useState('Empty');\r\n  \r\n    const onChange = (event, selectedDate) => {\r\n      const currentDate = selectedDate || date;\r\n      setShow(Platform.OS === 'ios');\r\n      setDate(currentDate);\r\n\r\n      let tempDate = new Date(currentDate);\r\n      let fDate = tempDate.getDate() + '/' + (tempDate.getMonth() + 1) + '/' + tempDate.getFullYear();\r\n      setText(fDate)\r\n\r\n\r\n    };\r\n  \r\n    const showMode = (currentMode) => {\r\n      setShow(true);\r\n      setMode(currentMode);\r\n    };\r\n  \r\n    const showDatepicker = () => {\r\n      showMode('date');\r\n    };\r\n\r\n    const showTimepicker = () => {\r\n        showMode('time');\r\n      };\r\n    \r\n  \r\n\r\n    return (\r\n        <View style={styles.container} >\r\n            <Text style={{fontWeight:'bold', fontSize:20}} >{text} </Text>\r\n        <View style={{margin:20}}>\r\n          <Button onPress={showDatepicker} title=\"Mostrar Calendario\" />\r\n        </View>\r\n      \r\n        {show && (\r\n          <DateTimePicker\r\n            testID=\"dateTimePicker\"\r\n            value={date}\r\n            mode={mode}\r\n            is24Hour={true}\r\n            display=\"default\"\r\n            onChange={onChange}\r\n          />\r\n        )}\r\n      </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  \r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n    \r\n  })"]},"metadata":{},"sourceType":"module"}