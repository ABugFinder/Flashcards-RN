{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StatusBar } from 'expo-status-bar';\nimport { FAB, Avatar, Button, Card, IconButton, Colors, Dialog, Portal, Provider, Paragraph, Divider, TextInput } from 'react-native-paper';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { color } from 'react-native-reanimated';\nimport { TabActions } from '@react-navigation/routers';\nvar DATA = [{\n  id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\n  pregunta: '¿De donde es origen Aristoteles?',\n  respuesta: 'Jaja saludos'\n}, {\n  id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',\n  pregunta: '¿Quien gana Felipe o Luna?',\n  respuesta: 'El neto'\n}, {\n  id: '58694a0f-3da1-471f-bd96-145571e29d72',\n  pregunta: '¿El mejor amigo de Sergio?',\n  respuesta: 'El Panochudo'\n}];\nexport default function PreguntasScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var showDialog = function showDialog() {\n    return setVisible(true);\n  };\n\n  var hideDialog = function hideDialog() {\n    return setVisible(false);\n  };\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      textPregunta = _React$useState4[0],\n      setTextPregunta = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      textRespuesta = _React$useState6[0],\n      setTextRespuesta = _React$useState6[1];\n\n  var Item = function Item(_ref2) {\n    var pregunta = _ref2.pregunta,\n        respuesta = _ref2.respuesta;\n    return React.createElement(Card, {\n      style: styles.item\n    }, React.createElement(Card.Title, {\n      title: pregunta,\n      subtitle: respuesta,\n      right: function right(props) {\n        return React.createElement(IconButton, _extends({}, props, {\n          icon: \"close\",\n          size: 20,\n          color: Colors.redA400,\n          onPress: function onPress() {}\n        }));\n      }\n    }), React.createElement(Card.Actions, null, React.createElement(Button, {\n      color: Colors.amber800,\n      onPress: showDialog\n    }, \"Editar\")));\n  };\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    return React.createElement(Item, {\n      pregunta: item.pregunta,\n      respuesta: item.respuesta\n    });\n  };\n\n  return React.createElement(Provider, null, React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    }\n  }, React.createElement(SafeAreaView, {\n    style: styles.container\n  }, React.createElement(FlatList, {\n    data: DATA,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    }\n  })), React.createElement(FAB, {\n    style: styles.fab,\n    icon: \"plus\",\n    onPress: showDialog\n  }), React.createElement(Portal, null, React.createElement(Dialog, {\n    visible: visible,\n    onDismiss: hideDialog\n  }, React.createElement(Dialog.Title, null, \"Crear Test  \"), React.createElement(Divider, null), React.createElement(Dialog.Content, null, React.createElement(TextInput, {\n    style: styles.input,\n    mode: \"outlined\",\n    label: \"Pregunta\",\n    value: textPregunta,\n    onChangeText: function onChangeText(textPregunta) {\n      return setTextPregunta(textPregunta);\n    },\n    placeholder: \"Type something\",\n    activeOutlineColor: Colors.blueA400,\n    right: React.createElement(TextInput.Affix, {\n      text: \"/20\"\n    })\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    mode: \"outlined\",\n    label: \"Respuesta\",\n    value: textRespuesta,\n    placeholder: \"Type something\",\n    onChangeText: function onChangeText(textRespuesta) {\n      return setTextRespuesta(textRespuesta);\n    },\n    activeOutlineColor: Colors.blueA400,\n    right: React.createElement(TextInput.Affix, {\n      text: \"/20\"\n    })\n  })), React.createElement(Dialog.Actions, null, React.createElement(Button, {\n    color: Colors.green800,\n    onPress: function onPress() {\n      return navigation.navigate('Preguntas');\n    }\n  }, \"Crear\")))), React.createElement(StatusBar, {\n    backgroundColor: \"#004C8C\",\n    style: \"light\"\n  })));\n}\nvar styles = StyleSheet.create({\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 10,\n    backgroundColor: 'green'\n  },\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0\n  },\n  item: {\n    padding: 5,\n    marginVertical: 8,\n    marginHorizontal: 5,\n    justifyContent: 'center',\n    elevation: 5\n  },\n  title: {\n    fontSize: 20\n  },\n  input: {\n    padding: 5\n  }\n});","map":{"version":3,"sources":["D:/Expo/FlashCards/navigation/screens/PreguntasScreen.js"],"names":["React","NavigationContainer","createStackNavigator","StatusBar","FAB","Avatar","Button","Card","IconButton","Colors","Dialog","Portal","Provider","Paragraph","Divider","TextInput","Ionicons","color","TabActions","DATA","id","pregunta","respuesta","PreguntasScreen","navigation","useState","visible","setVisible","showDialog","hideDialog","textPregunta","setTextPregunta","textRespuesta","setTextRespuesta","Item","styles","item","props","redA400","amber800","renderItem","flex","justifyContent","container","fab","input","blueA400","green800","navigate","StyleSheet","create","position","margin","right","bottom","backgroundColor","marginTop","currentHeight","padding","marginVertical","marginHorizontal","elevation","title","fontSize"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,UAApC,EAAgDC,MAAhD,EAAwDC,MAAxD,EAAgEC,MAAhE,EAAwEC,QAAxE,EAAkFC,SAAlF,EAA6FC,OAA7F,EAAsGC,SAAtG,QAAuH,oBAAvH;AACA,OAAOC,QAAP;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AAEA,IAAMC,IAAI,GAAG,CACT;AACEC,EAAAA,EAAE,EAAE,sCADN;AAEEC,EAAAA,QAAQ,EAAE,kCAFZ;AAGEC,EAAAA,SAAS,EAAE;AAHb,CADS,EAOT;AACEF,EAAAA,EAAE,EAAE,sCADN;AAEEC,EAAAA,QAAQ,EAAE,4BAFZ;AAGEC,EAAAA,SAAS,EAAE;AAHb,CAPS,EAaT;AACEF,EAAAA,EAAE,EAAE,sCADN;AAEEC,EAAAA,QAAQ,EAAE,4BAFZ;AAGEC,EAAAA,SAAS,EAAE;AAHb,CAbS,CAAb;AA6BA,eAAe,SAASC,eAAT,OAAyC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAChD,wBAA8BxB,KAAK,CAACyB,QAAN,CAAe,KAAf,CAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,WAAMD,UAAU,CAAC,IAAD,CAAhB;AAAA,GAAnB;;AAEA,MAAME,UAAU,GAAG,SAAbA,UAAa;AAAA,WAAMF,UAAU,CAAC,KAAD,CAAhB;AAAA,GAAnB;;AAEA,yBAAwC3B,KAAK,CAACyB,QAAN,CAAe,EAAf,CAAxC;AAAA;AAAA,MAAOK,YAAP;AAAA,MAAqBC,eAArB;;AACA,yBAA0C/B,KAAK,CAACyB,QAAN,CAAe,EAAf,CAA1C;AAAA;AAAA,MAAOO,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,MAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,QAAGb,QAAH,SAAGA,QAAH;AAAA,QAAaC,SAAb,SAAaA,SAAb;AAAA,WAET,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEa,MAAM,CAACC;AAApB,OACA,oBAAC,IAAD,CAAM,KAAN;AAAa,MAAA,KAAK,EAAEf,QAApB;AAA8B,MAAA,QAAQ,EAAEC,SAAxC;AAAmD,MAAA,KAAK,EAAE,eAACe,KAAD;AAAA,eACtD,oBAAC,UAAD,eAAgBA,KAAhB;AAAuB,UAAA,IAAI,EAAC,OAA5B;AAAoC,UAAA,IAAI,EAAE,EAA1C;AAA8C,UAAA,KAAK,EAAE5B,MAAM,CAAC6B,OAA5D;AAAqE,UAAA,OAAO,EAAE,mBAAM,CAAE;AAAtF,WADsD;AAAA;AAA1D,MADA,EAGA,oBAAC,IAAD,CAAM,OAAN,QACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE7B,MAAM,CAAC8B,QAAtB;AAAgC,MAAA,OAAO,EAAEX;AAAzC,gBADF,CAHA,CAFS;AAAA,GAAb;;AAYA,MAAMY,UAAU,GAAG,SAAbA,UAAa;AAAA,QAAGJ,IAAH,SAAGA,IAAH;AAAA,WACf,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAEA,IAAI,CAACf,QAArB;AAA+B,MAAA,SAAS,EAAEe,IAAI,CAACd;AAA/C,MADe;AAAA,GAAnB;;AAKA,SACI,oBAAC,QAAD,QACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEmB,MAAAA,IAAI,EAAE,CAAR;AAAYC,MAAAA,cAAc,EAAE;AAA5B;AAAb,KAGE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEP,MAAM,CAACQ;AAA5B,KACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAExB,IADV;AAEI,IAAA,UAAU,EAAEqB,UAFhB;AAGI,IAAA,YAAY,EAAE,sBAAAJ,IAAI;AAAA,aAAIA,IAAI,CAAChB,EAAT;AAAA;AAHtB,IADJ,CAHF,EAYM,oBAAC,GAAD;AACI,IAAA,KAAK,EAAEe,MAAM,CAACS,GADlB;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,OAAO,EAAEhB;AAHb,IAZN,EAiBM,oBAAC,MAAD,QACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,OAAjB;AAA0B,IAAA,SAAS,EAAEG;AAArC,KACI,oBAAC,MAAD,CAAQ,KAAR,uBADJ,EAEI,oBAAC,OAAD,OAFJ,EAGI,oBAAC,MAAD,CAAQ,OAAR,QAEA,oBAAC,SAAD;AACA,IAAA,KAAK,EAAGM,MAAM,CAACU,KADf;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,KAAK,EAAC,UAHN;AAIA,IAAA,KAAK,EAAEf,YAJP;AAKA,IAAA,YAAY,EAAE,sBAAAA,YAAY;AAAA,aAAIC,eAAe,CAACD,YAAD,CAAnB;AAAA,KAL1B;AAMA,IAAA,WAAW,EAAC,gBANZ;AAOA,IAAA,kBAAkB,EAAGrB,MAAM,CAACqC,QAP5B;AAQA,IAAA,KAAK,EAAE,oBAAC,SAAD,CAAW,KAAX;AAAiB,MAAA,IAAI,EAAC;AAAtB;AARP,IAFA,EAcA,oBAAC,SAAD;AACA,IAAA,KAAK,EAAGX,MAAM,CAACU,KADf;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,KAAK,EAAC,WAHN;AAIA,IAAA,KAAK,EAAEb,aAJP;AAKA,IAAA,WAAW,EAAC,gBALZ;AAMA,IAAA,YAAY,EAAE,sBAAAA,aAAa;AAAA,aAAIC,gBAAgB,CAACD,aAAD,CAApB;AAAA,KAN3B;AAOA,IAAA,kBAAkB,EAAGvB,MAAM,CAACqC,QAP5B;AAQA,IAAA,KAAK,EAAE,oBAAC,SAAD,CAAW,KAAX;AAAiB,MAAA,IAAI,EAAC;AAAtB;AARP,IAdA,CAHJ,EA4BI,oBAAC,MAAD,CAAQ,OAAR,QACA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAErC,MAAM,CAACsC,QAAtB;AAAgC,IAAA,OAAO,EAAE;AAAA,aAAMvB,UAAU,CAACwB,QAAX,CAAoB,WAApB,CAAN;AAAA;AAAzC,aADA,CA5BJ,CADJ,CAjBN,EAuDE,oBAAC,SAAD;AAAW,IAAA,eAAe,EAAC,SAA3B;AAAqC,IAAA,KAAK,EAAC;AAA3C,IAvDF,CADF,CADJ;AAmEP;AAED,IAAMb,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,GAAG,EAAE;AACHO,IAAAA,QAAQ,EAAE,UADP;AAEHC,IAAAA,MAAM,EAAE,EAFL;AAGHC,IAAAA,KAAK,EAAE,CAHJ;AAIHC,IAAAA,MAAM,EAAE,EAJL;AAKHC,IAAAA,eAAe,EAAE;AALd,GADwB;AAQ7BZ,EAAAA,SAAS,EAAE;AACPF,IAAAA,IAAI,EAAE,CADC;AAEPe,IAAAA,SAAS,EAAErD,SAAS,CAACsD,aAAV,IAA2B;AAF/B,GARkB;AAY3BrB,EAAAA,IAAI,EAAE;AACJsB,IAAAA,OAAO,EAAE,CADL;AAEJC,IAAAA,cAAc,EAAE,CAFZ;AAGJC,IAAAA,gBAAgB,EAAE,CAHd;AAIJlB,IAAAA,cAAc,EAAE,QAJZ;AAKJmB,IAAAA,SAAS,EAAE;AALP,GAZqB;AAmB3BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GAnBoB;AAuB3BlB,EAAAA,KAAK,EAAE;AACHa,IAAAA,OAAO,EAAE;AADN;AAvBoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { View, Text, StyleSheet,FlatList, SafeAreaView } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { FAB, Avatar, Button, Card, IconButton, Colors, Dialog, Portal, Provider, Paragraph, Divider, TextInput } from 'react-native-paper';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport { color } from 'react-native-reanimated';\r\nimport { TabActions } from '@react-navigation/routers';\r\n\r\nconst DATA = [\r\n    {\r\n      id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\r\n      pregunta: '¿De donde es origen Aristoteles?',\r\n      respuesta: 'Jaja saludos',\r\n\r\n    },\r\n    {\r\n      id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',\r\n      pregunta: '¿Quien gana Felipe o Luna?',\r\n      respuesta: 'El neto',\r\n\r\n    },\r\n    {\r\n      id: '58694a0f-3da1-471f-bd96-145571e29d72',\r\n      pregunta: '¿El mejor amigo de Sergio?',\r\n      respuesta: 'El Panochudo',\r\n\r\n    },\r\n   \r\n    \r\n   \r\n    \r\n  ];\r\n\r\n  \r\n\r\n \r\n\r\nexport default function PreguntasScreen({ navigation }) {\r\n        const [visible, setVisible] = React.useState(false);\r\n\r\n        const showDialog = () => setVisible(true);\r\n    \r\n        const hideDialog = () => setVisible(false);\r\n    \r\n        const [textPregunta, setTextPregunta] = React.useState('');\r\n        const [textRespuesta, setTextRespuesta] = React.useState('');\r\n    \r\n        const Item = ({ pregunta, respuesta }) => (\r\n\r\n            <Card style={styles.item}>\r\n            <Card.Title  title={pregunta} subtitle={respuesta} right={(props) => \r\n                <IconButton {...props} icon=\"close\" size={20} color={Colors.redA400} onPress={() => {}} />}/>\r\n            <Card.Actions>\r\n              <Button color={Colors.amber800} onPress={showDialog} >Editar</Button>\r\n            </Card.Actions>\r\n          </Card>\r\n          );\r\n    \r\n    \r\n        const renderItem = ({ item }) => (\r\n            <Item pregunta={item.pregunta} respuesta={item.respuesta}/>\r\n          );\r\n        \r\n    \r\n        return (\r\n            <Provider>\r\n              <View style={{ flex: 1,  justifyContent: 'center' }}>\r\n    \r\n             \r\n                <SafeAreaView style={styles.container}> \r\n                    <FlatList\r\n                        data={DATA}\r\n                        renderItem={renderItem}\r\n                        keyExtractor={item => item.id}\r\n                    />\r\n                </SafeAreaView>\r\n    \r\n                \r\n                    <FAB\r\n                        style={styles.fab}\r\n                        icon=\"plus\"\r\n                        onPress={showDialog}\r\n                    />\r\n                    <Portal>\r\n                        <Dialog visible={visible} onDismiss={hideDialog}>\r\n                            <Dialog.Title>Crear Test  </Dialog.Title>\r\n                            <Divider/>\r\n                            <Dialog.Content>\r\n    \r\n                            <TextInput\r\n                            style= {styles.input}\r\n                            mode=\"outlined\"\r\n                            label=\"Pregunta\"\r\n                            value={textPregunta}\r\n                            onChangeText={textPregunta => setTextPregunta(textPregunta)}\r\n                            placeholder=\"Type something\"\r\n                            activeOutlineColor= {Colors.blueA400}\r\n                            right={<TextInput.Affix text=\"/20\" />}\r\n    \r\n                            />\r\n    \r\n                            <TextInput\r\n                            style= {styles.input}\r\n                            mode=\"outlined\"\r\n                            label=\"Respuesta\"\r\n                            value={textRespuesta}\r\n                            placeholder=\"Type something\"\r\n                            onChangeText={textRespuesta => setTextRespuesta(textRespuesta)}\r\n                            activeOutlineColor= {Colors.blueA400}\r\n                            right={<TextInput.Affix text=\"/20\" />}\r\n                            />\r\n                            </Dialog.Content>\r\n                            <Dialog.Actions>\r\n                            <Button color={Colors.green800} onPress={() => navigation.navigate('Preguntas')}>Crear</Button>\r\n                            </Dialog.Actions>\r\n                        </Dialog>\r\n                    </Portal>\r\n    \r\n    \r\n               \r\n    \r\n                <StatusBar backgroundColor=\"#004C8C\" style=\"light\" />\r\n           \r\n             </View>\r\n            </Provider>\r\n    \r\n          \r\n           \r\n           \r\n        );\r\n    \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    fab: {\r\n      position: 'absolute',\r\n      margin: 16,\r\n      right: 0,\r\n      bottom: 10,\r\n      backgroundColor: 'green',\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        marginTop: StatusBar.currentHeight || 0,\r\n      },\r\n      item: {\r\n        padding: 5,\r\n        marginVertical: 8,\r\n        marginHorizontal: 5,\r\n        justifyContent: 'center',\r\n        elevation: 5,\r\n      },\r\n      title: {\r\n        fontSize: 20,\r\n      },\r\n\r\n      input: {\r\n          padding: 5,\r\n      }\r\n  })\r\n  "]},"metadata":{},"sourceType":"module"}